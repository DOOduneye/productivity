name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - server/**
      - '**/Dockerfile'
      - '**/docker-compose.yml'
      - .dockerignore
  pull_request:
    branches: [main]
    paths:
      - server/**
      - '**/Dockerfile'
      - '**/docker-compose.yml'
      - .dockerignore
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: ./server
          push: true
          tags: davidoduneye/productivity:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          passphrase: ${{ secrets.DO_SSH_PASSPHRASE }}
          script: |
            cd productivity/
            docker system prune -af
            docker pull davidoduneye/productivity:latest
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

  cleanup:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Clean up old images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          passphrase: ${{ secrets.DO_SSH_PASSPHRASE }}
          script: |
            # Keep only images used by running containers and remove everything else
            docker image prune -af --filter "until=24h"
